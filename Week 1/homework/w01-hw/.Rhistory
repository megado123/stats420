mam["name"]
mam = MASS::mammals
?mammals
View(mammals)
ratio = mam$brain/mam$body
ratio = mam$brain/mam$body
ratio
ratio = mam$brain/mam$body
ratio
mam$name[which.max(mam$brain/mam$body)]
mam[1]
mam[1][11]
mam[1]
mam[1]
mam[1][11]
mam[1]
mam["name"]
mam[1, 11]
mam[[1]]
mam2 = as_tibble(mammals)
Galton = mosaicData::Galton
Galton
library(tibble)
mam2 = as_tibble(mammals)
mam2
str(mam2)
mam["name"]
View(mam2)
ratio = mam$brain/mam$body
ratio
mam$name[which.max(mam$brain/mam$body)]
View(mam)
names(mammals)
which.max(mam$brain/mam$body)
View(mam)
mpg == ggplot2: mpg
mpg == ggplot2::mpg
mpg = ggplot2::mpg
blah = ggplot2::mpg
blah = ggplot2::mpg
mpg = ggplot2::mpg
hist(mpg$cty)
mean(mpg$cty)
sd(mpg$cty)
hist(mpg$cty,
xlab = "Miles Per Gallon (City)",
main = "Histogram of MPG (City)",
breaks = 12,
col = "darkorange",
border = "dodgerblue")
mpg$drv
?barplot
barplot(mpg$drv)
barplot(table(mpg$drv))
mpg$drv
table(mpg$drv)
barplot(table(mpg$drv))
boxplot(hwy ~ drv, data = mpg)
library(datasets)
data(iris)
iris
str(iris)
boxplot(Sepal.Length ~ Sepal.Width, data = iris)
?attitude
View(attitude)
View(iris)
boxplot(attitude, las = 2)
boxplot(iris, las = 2)
iris
iris$Species = NULL
head(iris)
boxplot(iris, las)
boxplot(iris, las = 2)
boxplot(iris)
boxplot(iris, las = 2)
?boxplot
boxplot(iris, las = 2)
boxplot(iris, las = 1)
boxplot(iris, las = 2)
mean(mel$age[mel$status == 2])
library(MASS)
mel = MASS::Melanoma
View(mel)
length(which(mel$status == 1)) ## 57 is the correct answer
which(mel$status == 2) ## indexes of vector of alive people
sum(mel$age[mel$status ==2])/length(mel$age[mel$status ==2])
mean(mel$age[mel$status == 2])
boxplot(Sepal.Length ~ Sepal.Width, data = iris)
library(datasets)
data(iris)
iris
str(iris)
iris$Species = NULL
head(iris)
boxplot(iris, las = 2)
summary(iris)
var(iris)
iris
std(iris)
sd(iris)
sd(iris$Sepal.Length)
sd(iris$Sepal.Width)
sd(iris$Petal.Length)
sd(iris$Petal.Width)
quiz_list = list(
x = c(1, 2),
y = "Hello Quiz Taker",
z = "z"
)
quiz_list[3]
quiz_list[[3]] - #returns a vector of size 1 with the value
## unselected, this is not logical
quiz_list["3"]
quiz_list[[3]] - #returns a vector of size 1 with the value
## unselected, this is not logical
quiz_list["3"]
#Which of the following options would return the third element of the list quiz_list
quiz_list = list(
x = c(1, 2),
y = "Hello Quiz Taker",
z = "z"
)
quiz_list[[3]] - #returns a vector of size 1 with the value
## unselected, this is not logical
quiz_list["3"]
quiz_list[[3]]
z = list(
a = c(1, 2, 3, 4),
b = TRUE,
c = "Hello!",
d = function(arg = 42) {print("Hello World")},
e = diag(5)
)
max(z([[1]]))
z[1]
z[[1]]
max(z[[1]])
min(z[[1]])
z = list(
a = c(1, 2, 3, 4),
b = c(5, 6, 7, 8),
c = c(9, 10, 11, 12),
d = function(arg = 42) {print("Hello World")},
e = diag(5)
)
min(z[[1]])
max(z[[2]])
mean(z[[3]])
min(z[[1]]) + max(z[[2]]) + mean(z[[3]])
?airquality
View(airquality)
str(airquality)
airquality[airquality$Month == 5,]
airquality[airquality$Month == 5]
airquality[airquality$Month == 5,]
Mean(airquality[airquality$Month == 5,]$Wind)
airquality[airquality$Month == 5,]$Wind
airquality[airquality$Month == 5,]$Wind
mean(airquality[airquality$Month == 5,]$Wind)
mean(airquality$Ozone)
?mean
View(airquality)
mean(airquality$Ozone, na.rm = TRUE)
mean(airquality$Ozone, na.rm = TRUE)
str(airquality)
mean(airquality$Ozone, na.rm = TRUE)
?plot
plot(airquality$Temp, airquality$Wind)
set.seed(1337)
x = rnorm(10000)
x
str(x)
head(x, 10)
length(x)
x[x>2]
length(x[x>2])
length(x)
length(x[x>2])/length(x) ##221/10000
f = function(input = 42){
ifelse(input < 0, 0, input)
}
f(v1)
v1 = c(1,3,5,7)
f(v1)
v1 = c(-1,3,5,7)
f(v1)
f(v1)
set.seed(42)
x = rnorm(100, mean = 0, sd = 10)
mean(f(input = x)) - f()
x0 = rep(1, 30)
x0
length(x0)
temp = 1:30
temp
x1 = (1:30)^2
x1
x0 = rep(1, 30)
x1 = (1:30)^2
mean(y)
x0 = rep(1, 30)
x1 = (1:30)^2
set.seed(42)
y  = 5 * x0 + x1 + rnorm(n = 30, mean = 0 , sd = 1)
mean(y)
x0
X1
x1
x0
x1
matrix(col1 = x0, col2 = x1)
X = cbind( col1 = x0, col2 = x1)
x = 1:9
X = matrix(x, nrow = 3, ncol = 3)
X
Y = matrix(x, nrow = 3, ncol =3, byrow = TRUE)
Y
Z = matrix(0, 2, 4)
Z
X[1,2]
X[1, ]
X[ , 2]
X[2, c(1,2)]
cbind( col1 = x, col2 = rev(x), col3 = rep(1, 9))
cbind( col1 = x, col2 = rev(x))
cbind( col1 = x0, col2 = x1)
X = cbind( col1 = x0, col2 = x1)
X
sum(X[17])
sum(X[17,])
sum(X[17,]) + sum(X[19,])
t(X)
t(X) %*% X
solve(t(X) %*% X)
solve(t(X) %*% X) %*% t(x) %*% y
solve(t(X) %*% X) %*% t(x)
solve(t(X) %*% X)
t(x)
solve(t(X) %*% X)
t(x)
t(X)
solve(t(X) %*% X) %*% t(X)
solve(t(X) %*% X) %*% t(X) %*% y
beta_hat = solve(t(X) %*% X) %*% t(X) %*% y
beta_hat
sum(beta_hat)
X = cbind( col1 = x0, col2 = x1)
sum(X[17,]) + sum(X[19,])
y_hat = X %*% beta_hat
y_hat
y
y
str(y_hat)
y_hat
as_vector(y_hat)
y_hat[1,]
sum((y - y_hat[which(y)])^2)
sum((y - y_hat)^2)
set.seed(1337)
y_hat = X %*% beta_hat
sum((y - y_hat)^2)
set.seed(1337)
x = rnorm(10000)
x
str(x)
head(x, 10)
length(x)
x[abs(x > 2)]
x
x[abs(x > 2)]
x
head(x, 10)
head(x[x > 2], 10)
head(x[x > 2], 100)
head(x[x < 0], 100)
length(x[x< -2])
x[abs(x > 2)]
x[(x > 2) | (x < -2)]
length(x[(x > 2) | (x < -2)])/length(x)
clear
library("faraway")
install.packages("faraway")
diabetes = faraway::diabetes
View(diabetes)
?diabetes
diabetes = faraway::diabetes
View(diabetes)
str(diabetes)
library(tibble)
Galton = as_tibble(Galton)
diabetes = as_tibble(diabetes)
str(diabetes)
View(diabetes)
head(diabetes)
diabetes = faraway::diabetes
head(diabetes)
library(tibble)
diabetes = as_tibble(diabetes)
head(diabetes)
diabetes.length
length(diabetes)
View(diabetes)
length(diabetes)
diabetes = faraway::diabetes
length(diabetes)
diabetes %>%
print(n = 10, width = Inf)
diabetes.length
diabetes.width
length(diabetes$id)
?tibble
library(MASS)
mel = MASS::Melanoma
View(mel)
length(diabetes)
length(diabetes$id)
?diabetes
?if
x = 1:100
x
x = 1:100
x
## this is improper, but would like to understand why
if (x > 2){
z = x - 10
} else{
z = 5 + x
}
## this is improper, but would like to understand why
if (x > 2){
z = x - 1
} else{
z = x + 1
}
z = ifelse(x > 2 == 0, x - 1, x + 1)
z = ifelse(x > 2 == 0, x - 1, x + 1)
z = ifelse(x > 2, x - 1, x + 1)
source('~/.active-rstudio-document', echo=TRUE)
z = ifelse(x > 2, x - 1, x + 1)
z
if (x > 2){
z = x - 1
} else{
z = x + 1
}
mam = MASS::mammals
str(mam)
diabetes = as_tibble(diabetes)
str(diabetes)
View(diabetes)
head(diabetes)
?tibble
length(diabetes$id)
nrow(diabetes)
ncol(diabetes)
nrow(diabetes)
?sapply
lapply(diabetes, is.factor)
sapply(diabetes, is.factor)
diabetes = faraway::diabetes
length(diabetes)
View(diabetes)
head(diabetes)
library(tibble)
diabetes = as_tibble(diabetes)
str(diabetes)
View(diabetes)
head(diabetes)
nrow(diabetes)
ncol(diabetes)
lapply(diabetes, is.factor)
sapply(diabetes, is.factor)
sapply(diabetes, is.factor, simplify = TRUE)
mean(diabetes$hdl)
?mean
mean(diabetes$hdl, na.rm = TRUE)
?diabetes
sd(diabetes)
sd(diabetes.chol)
sd(diabetes$chol)
sd(diabetes$chol, na.rm = TRUE)
max(diabetes$age)
min(diabetes$age)
range(diabetes$age)
View(diabetes)
diabetes[diabetes$gender == "female"]
diabetes[[diabetes$gender == "female"]]
diabetes["gender" == "female"]
temp = diabetes["gender" == "female"]
temp
temp = diabetes[["gender" == "female"]]
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
View(mbew_selected_Matnr)
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
View(mbew_selected_Matnr)
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
View(mbew_selected_Matnr)
mbew = mbew_selected_Matnr
lapply(diabetes, is.factor)
vars = lapply(diabetes, is.factor)
vars = lapply(diabetes, is.factor)
vars = lapply(mbew, is.factor)
vars
str(mbew)
update = function(var){
if is.numeric(var){
var = var/10
}
}
vars = lapply(mbew, is.factor)
head(var, 10)
head(var, 10)
head(var, 10)
str(mbew)
head(var, 10)
var
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
View(mbew_selected_Matnr)
mean(mbew)
mean(mbew)
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
mbew = mbew_selected_Matnr
vars = lapply(mbew, is.factor)
str(mbew)
head(var, 10)
View(mbew_selected_Matnr)
vars = lapply(mbew_selected_Matnr, is.factor)
vars
vars = sapply(mbew_selected_Matnr, is.factor)
vars
str(vars)
if is.numeric(vars){
mbew_selected_Matnr = mbew_selected_Matnr/10
}
temp = ifelse (is.numeric(vars), mbew_selected_Matnr/10, mbew_selected_Matnr)
View(mbew_selected_Matnr)
vars = sapply(mbew_selected_Matnr, is.factor)
length(vars)
View(mbew_selected_Matnr)
names(mbew_selected_Matnr)
vnames = names(mbew_selected_Matnr)
temp = ifelse (is.numeric(vnames), mbew_selected_Matnr[vnames]/10, mbew_selected_Matnr)
temp
mbew_selected_Matnr[vnames]
temp = ifelse (is.numeric(mbew_selected_Matnr[vnames]), mbew_selected_Matnr[vnames]/10, mbew_selected_Matnr)
temp
for(i in names(mbew_selected_Matnr)){
ifelse(is.numeric(mbew_selected_Matnr[, i]), mbew_selected_Matnr/10, mbew_selected_Matnr )
}
temp2= for(i in names(mbew_selected_Matnr)){
ifelse(is.numeric(mbew_selected_Matnr[, i]), mbew_selected_Matnr/10, mbew_selected_Matnr )
}
temp2
View(temp2)
silly_fun = function(arg1){
for(i in names(arg1)){
ifelse(is.numeric(arg1[, i]), arg1[ , i]/10, arg1[ , i] )
}
blah = silly_fun(mbew_selected_Matnr)
View(blah)
library(readr)
mbew_selected_Matnr <- read_csv("C:/Users/a05v6zz/Desktop/mbew-selected-Matnr.csv")
vnames = names(mbew_selected_Matnr)
vars
str(vars)
str(mbew)
silly_fun = function(arg1){
for(i in names(arg1)){
ifelse(is.numeric(arg1[, i]), arg1[ , i]/10, arg1[ , i] )
}
blah = silly_fun(mbew_selected_Matnr)
blah2 = silly_fun(mbew_selected_Matnr)
View(blah2)
setwd("~/University of Illinois/Status 420/Week 1/homework/w01-hw")
mpg = ggplot2::mpg
hist(mpg$cty)
x = 1:10
y = 3 * x
x + y
hist(y)
x = 1:10
y = 3 * x
x + y
x = 1:10
y = 3 * x
x + y
hist(y)
library(readr)
nutrition <- read_csv("~/University of Illinois/Status 420/Week 1/homework/w01-hw/nutrition.csv")
View(nutrition)
library(readr)
nutrition <- read_csv("nutrition.csv")
nutrition <- read_csv("nutrition.csv")
library(readr)
nutrition <- read_csv("nutrition.csv")
# define function
get_sd = function(x, biased = FALSE) {
n = length(x) - 1 * !biased
sqrt((1 / n) * sum((x - mean(x)) ^ 2))
}
# generate random sample data
set.seed(42)
(test_sample = rnorm(n = 10, mean = 2, sd = 5))
