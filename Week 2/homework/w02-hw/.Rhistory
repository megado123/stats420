length(a)
rms_diff = function (x, y){
-1 * sqrt(  (1/length(x)) * sum(( x - y) ^ 2))
}
a
b
rms_diff(x = a, y = b)
rms_diff(x = d, y = c)
rms_diff(x = d, y = 1)
rms_diff(x = a, y = 0) ^ 2 * length(a)
library(tibble)
diabetes = as_tibble(diabetes)
str(diabetes)
?str
View(diabetes)
colnames(diabetes)
head(diabetes)
nrow(diabetes)
ncol(diabetes)
colName(diabetes[is.factor == TRUE])
v = sapply(diabetes, is.factor, simplify = TRUE)
v[[1]]
v[which(v == TRUE)]
v = sapply(diabetes, is.factor, simplify = TRUE)
v
v[which(v == TRUE)]
colnames(v[which(v == TRUE)])
v[which(v == TRUE)]
v[1]
str(v)
str(v2)
v2 = v[which(v == TRUE)]
v2
str(v2)
v2[,1]
v2[1]
colnames(v2)
v2[[1]]
v2[[]]
v2
?v2
as.vector(v2)
v3 = as.vector(v2)
colnames(v3)
str(v2)
v2["names"]
v2["names"]
v2[["names"]]
v2[[1:3]]
v2[1:3]
v2[1:3[1]]
v3 = v2[1:3[1]]
v3
v = sapply(diabetes, is.factor, simplify = TRUE)
v[which(v == TRUE)]
mean(diabetes$hdl, na.rm = TRUE)
range(diabetes$age)
range(diabetes$age)[1]
range(diabetes$age)[2]
IQR(diabetes)
IQR(diabetes$hdl)
IQR(diabetes$hdl, na.rm = FALSE)
IQR(diabetes$hdl, na.rm = TRUE)
IQR(diabetes[ diabetes$gender == "female", ]$hdl, na.rm = TRUE)
IQR(diabetes[ diabetes$gender == "male", ]$hdl, na.rm = TRUE)
hist(nutrition$Calories,
xlab   = "Calories",
main   = "Histogram of Calories",
#breaks = 12,
col    = "dodgerblue",
border = "darkorange")
set.seed(42)
a_vector = rpois(250, lambda = 6)
a_vector
sum(as.numeric(a_vector >= 3))
x = 1:100
x
if (x %% 2 == 0){
z = x - 10
} else{
z = 5 + x
}
sd(z)
z = ifelse(x %% 2 == 0, x - 10, 5 + x)
sd(z)
quiz_list = list(
x = c(1, 2),
y = "Hello Quiz Taker",
z = "z"
)
quiz_list[3]
quiz_list[[3]] - #returns a vector of size 1 with the value
## unselected, this is not logical
quiz_list["3"]
quiz_list$z
library(MASS)
mel = MASS::Melanoma
hist(mel$age, breaks = 50)
hist(mel$age, breaks = 50)
hist(rchisq(1500, df = 5), breaks = 20)
a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
rms_diff = function (x, y){
sqrt(  (1/length(x)) * sum(( x - y) ^ 2))
}
rms_diff(x = a, y = b)
rms_diff(x = d, y = c)
rms_diff(x = d, y = 1)
rms_diff(x = a, y = 0) ^ 2 * length(a)
a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
sum_of_squares = function(x){
sum(x ^ 2)
}
sum_of_squares(x = c(c, d))
temp = c(c, d)
length(a)
rms_diff = function (x, y){
sqrt(  (1/length(x)) * sum(( x - y) ^ 2))
}
a
b
rms_diff(x = a, y = b)
rms_diff(x = d, y = c)
rms_diff(x = d, y = 1)
rms_diff(x = a, y = 0) ^ 2 * length(a)
a
d
y
a
b
d
c
?dname
?dnorm
dnorm(x = 3, mean = 2, sd = 5)
pnorm(q = 3, mean = 2, sd = 5)
rnorm(n = 10, mean = 2, sd = 5)
plot(cars)
?cars
pnorm(115, 100, 15)
pnorm(1)
?pnorm
View(cars)
?cars
str(cars)
dim(car)
dim(cars)
plot(dist ~ speed, data = cars,
xlab = "Speed (in miles per hour",
ylab = "Stopping Distance (in feet)",
main = "Stopping Distance vs Speed",
pch = 20,
cex = 2,
col = "grey")
str(cars)
x = cars$speed
y = cars$dist
Sxy = sum(x - mean(x))(y - mean(y))
Sxy = sum(x - mean(x))*(y - mean(y))
Sxx = sum((x - mean(x))^ 2)
Syy = sum((y = mean(y))^ 2)
beta_1_hat = Sxy/Sxx
(beta_1_hat = Sxy/Sxx)
Sxy
Sxy = sum((x - mean(x))*(y - mean(y)))
Sxy
Sxx = sum((x - mean(x))^ 2)
Syy = sum((y = mean(y))^ 2)
clr
sim_model_minutes = lm(W ~ MIN, data = goalies)
library("knitr")
goalies = read_csv("goalies.csv")
dfMIN = goalies[, c("MIN", "W")]
sim_model_minutes = lm(W ~ MIN, data = dfMIN)
dfGAA = goalies[, c("GAA", "W")]
library(readr)
library("knitr")
goalies = read_csv("goalies.csv")
setwd("~/University of Illinois/Status 420/Week 2/homework/w02-hw")
goalies = read_csv("goalies.csv")
dfMIN = goalies[, c("MIN", "W")]
sim_model_minutes = lm(W ~ MIN, data = dfMIN)
sim_model_minutes2 = lm(W ~ MIN, data = goalies)
coef(sim_model_minutes)
coef(sim_model_minutes2)
?lm
test = lm(W ~ MIN, data = goalies, na.omit)
test = lm(W ~ MIN, data = goalies, na.omit = TRUE)
test = lm(W ~ MIN, data = goalies, na.action = na.omit())
test = lm(W ~ MIN, data = goalies, na.action = na.omit(goalies))
test = lm(W ~ MIN, data = goalies, na.omit(goalies))
test = lm(W ~ MIN, data = goalies)
kable(head(iris), format = "latex")
library(knitr)
kable(head(iris), format = "latex")
kable(head(mtcars), format = "markdown", padding = 0)
names(summary(sim_model_minutes))
r_squared = c(summary(sim_model_minutes)r.squared, summary(sim_model_GAA)r.squared, summary(sim_model_SO)r.squared)
summary(sim_model_minutes)r.squared
r_squared = c(summary(sim_model_minutes)$r.squared, summary(sim_model_GAA)$r.squared, summary(sim_model_SO)$r.squared)
sim_model_minutes = lm(W ~ MIN, data = goalies)
sim_model_GAA     = lm(W ~ GAA, data = goalies)
sim_model_SO      = lm(W ~ SO, data = goalies)
Predictor = c("minutes", "goals against", "shutouts")
summary(sim_model_minutes)r.squared
r_squared = c(summary(sim_model_minutes)$r.squared, summary(sim_model_GAA)$r.squared, summary(sim_model_SO)$r.squared)
r_squared
sim_model_minutes)$r.squared
summary(sim_model_minutes)$r.squared
summary(sim_model_minutes)$r.squared == r_squared[1]
summary(sim_model_minutes).names
summary(sim_model_minutes)$fitted.values
names(summary(sim_model_minutes))
names(sim_model_minutes)
sim_model_minutes$coefficients
summary(sim_model_minutes)$coefficients
sim_model_minutes$fitted.values
sim_model_minutes$fitted.values[1]
fitted_val = as.vector(sim_model_minutes$fitted.values)
fitted_val
names(sim_model_minutes)
sim_model_minutes$terms
names(sim_model_minutes)
sim_model_minutes$qr
names(sim_model_minutes)
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
get_rmse(goalies$W,sim_model_minutes$fitted.values)
get_rmse(goalies$W,as.vector(sim_model_minutes$fitted.values))
goalies = read_csv("goalies.csv")
goalies = omit.na(goalies)
view(goalies)
View(goalies)
dfMIN = goalies[, c("MIN", "W")]
View(dfMIN)
sim_model_minutes = lm(W ~ MIN, data = dfMIN)
length(sim_model_minutes$fitted.values)
length(dfMIN)
length(dfMIN$MIN)
dfMIN = dfMIN[!is.na(dfMIN), ]
length(dfMIN$MIN)
goalies = read_csv("goalies.csv")
dfMIN = goalies[, c("MIN", "W")]
length(dfMIN$MIN)
dfMIN = dfMIN[!is.na(dfMIN), ]
length(dfMIN$MIN)
goalies = read_csv("goalies.csv")
dfMIN = goalies[, c("MIN", "W")]
length(dfMIN$MIN)
dfMIN = dfMIN[!is.na(dfMIN)]
length(dfMIN$MIN)
goalies = read_csv("goalies.csv")
goalies <- na.omit(goalies)
length(goalies)
goalies = read_csv("goalies.csv")
nrows(goalies)
length(goalies)
nrow(goalies)
goalies <- na.omit(goalies)
nrow(goalies)
dfMIN = goalies[, c("MIN", "W")]
dfMIN = na.omit(dfMIN)
now(dfMIN)
nrow(dfMIN)
goalies = read_csv("goalies.csv")
nrow(goalies)
dfMIN = goalies[, c("MIN", "W")]
nrow(dfMIN)
dfMIN = na.omit(dfMIN)
nrow(dfMIN)
clean_df(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
clean_df(dataframe, predictor, response ){
df = na.omit(df)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
dfMIN = clean_df(goalies, MIN, W )
dfMIN = clean_df(goalies, "MIN", "W" )
nrow(dfMIN)
clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
}
dfMIN = clean_df(goalies, "MIN", "W" )
lb = clean_df(goalies, "MIN", "W" )
dfMIN = clean_df(goalies, "MIN", "W" )
goalies = read_csv("goalies.csv")
clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
dfMIN = clean_df(goalies, "MIN", "W" )
head(dfMIN)
sim_model_minutes = lm(response ~ predictor, data = dfMIN)
dfMIN = clean_df(goalies, "MIN", "W" )
head(dfMIN)
sim_model_minutes = lm(MIN ~ W, data = dfMIN)
goalies = read_csv("goalies.csv")
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
get_rmse(df$response, $fitted.values)
}
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
get_rmse(df$response, model$fitted.values)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
rmse_1 = get_rmse_for_variables(goalies, "MIN", "W")
goalies = read_csv("goalies.csv")
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
get_rmse(df$response, model$fitted.values)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
rmse_1 = get_rmse_for_variables(goalies, "MIN", "W")
goalies = read_csv("goalies.csv")
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
print(rnow(df$response))
get_rmse(df$response, model$fitted.values)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
rmse_1 = get_rmse_for_variables(goalies, "MIN", "W")
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
print("**************" rnow(df$response))
get_rmse(df$response, model$fitted.values)
}
goalies = read_csv("goalies.csv")
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
'print("**************" rnow(df$response))
'get_rmse(df$response, model$fitted.values)
}
get_rmse_for_variables = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
#print("**************" rnow(df$response))
#get_rmse(df$response, model$fitted.values)
}
rmse_1 = get_rmse_for_variables(goalies, "MIN", "W")
goalies = read_csv("goalies.csv")
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
#model = lm(response ~ predictor, data = df)
#print("**************" rnow(df$response))
#get_rmse(df$response, model$fitted.values)
}
df = get_clean_df(goalies, "MIN", "W")
head(df)
model = lm("W", "MIN", data = df)
names(df)
model = lm("W", "MIN", data = df)
model = lm(W ~MIN, data = df)
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
#model = lm(response ~ predictor, data = df)
#print("**************" rnow(df$response))
#get_rmse(df$response, model$fitted.values)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
df = get_clean_df(goalies, "MIN", "W")
model = lm(W ~MIN, data = df)
get_rmse(df$response, model$fitted.values)
df = get_clean_df(goalies, "MIN", "W")
model = lm(W ~MIN, data = df)
get_rmse(df$W, model$fitted.values)
goalies = read_csv("goalies.csv")
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
get_rmse(df$response, model$fitted.values)
}
df = get_clean_df(goalies, "MIN", "W")
goalies = read_csv("goalies.csv")
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
#get_rmse(df$response, model$fitted.values)
}
df = get_clean_df(goalies, "MIN", "W")
goalies = read_csv("goalies.csv")
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
df = get_clean_df(goalies, "MIN", "W")
model = lm(W ~MIN, data = df)
get_rmse(df$W, model$fitted.values)
df      = get_clean_df(goalies, "GAA", "W")
model   = lm(W ~MIN, data = df)
goalies = read_csv("goalies.csv")
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
df1      = get_clean_df(goalies, "MIN", "W")
df1      = get_clean_df(goalies, "MIN", "W")
model   = lm(W ~MIN, data = df1)
rmse[1] = get_rmse(df$W, model$fitted.values)
rmse = repeat(0, 3)
rmse = rep(0, 2000)
df1      = get_clean_df(goalies, "MIN", "W")
model   = lm(W ~MIN, data = df1)
rmse[1] = get_rmse(df$W, model$fitted.values)
df2      = get_clean_df(goalies, "GAA", "W")
model   = lm(W ~MIN, data = df)
rmse = rep(0, 2000)
df      = get_clean_df(goalies, "MIN", "W")
model   = lm(W ~MIN, data = df1)
rmse[1] = get_rmse(df$W, model$fitted.values)
df      = get_clean_df(goalies, "GAA", "W")
model   = lm(W ~ GAA, data = df)
rmse[2] = get_rmse(df$W, model$fitted.values)
df      = get_clean_df(goalies, "SO", "W")
model   = lm(W ~ GAA, data = df)
df      = get_clean_df(goalies, "MIN", "W")
model   = lm(W ~MIN, data = df1)
rmse[1] = get_rmse(df$W, model$fitted.values)
df      = get_clean_df(goalies, "GAA", "W")
model   = lm(W ~ GAA, data = df)
rmse[2] = get_rmse(df$W, model$fitted.values)
df      = get_clean_df(goalies, "SO", "W")
model   = lm(W ~ SO, data = df)
rmse[3] = get_rmse(df$W, model$fitted.values)
rmse
head(rmse)
rmse      = rep(0, 3)
r_squared = rep(0,3)
goalies = read_csv("goalies.csv")
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
}
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
rmse      = rep(0, 3)
r_squared = rep(0,3)
df           = get_clean_df(goalies, "MIN", "W")
model        = lm(W ~MIN, data = df1)
r_squared[1] = summary(model)$r.squared
rmse[1]      = get_rmse(df$W, model$fitted.values)
df           = get_clean_df(goalies, "GAA", "W")
model        = lm(W ~ GAA, data = df)
r_squared[2] = summary(model)$r.squared
rmse[2]      = get_rmse(df$W, model$fitted.values)
df           = get_clean_df(goalies, "SO", "W")
model        = lm(W ~ SO, data = df)
r_squared[3] = summary(model)$r.squared
rmse[3]      = get_rmse(df$W, model$fitted.values)
goalies = read_csv("goalies.csv")
get_rmse = function(yi,  yi_hat){
sqrt(sum((yi-yi_hat)^2) * (1/length(yi)))
}
get_clean_df = function(dataframe, predictor, response ){
df = dataframe[, c(predictor, response)]
df = na.omit(df)
model = lm(response ~ predictor, data = df)
get_rmse(df$response, model$fitted.values)
}
try1 = get_clean_df(goalies, "MIN", "W")
rm(list=ls())
