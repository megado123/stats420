sim_1 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + runorm(n = sample_size, mean = 0, sd = 1)
data.fram(x,y)
}
sim_2 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + runorm(n = sample_size, mean = 0, sd = x)
data.fram(x,y)
}
sim_3 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x ^ 2 + runorm(n = sample_size, mean = 0, sd = 5)
data.fram(x,y)
}
sim_3 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x ^ 2 + runorm(n = sample_size, mean = 0, sd = 5)
data.fram(x,y)
}
sim_data_1 = sim_1()
set.seed(42)
sim_data_1 = sim_1()
sim_1 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = 1)
data.fram(x,y)
}
sim_2 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = x)
data.fram(x,y)
}
sim_3 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x ^ 2 + rnorm(n = sample_size, mean = 0, sd = 5)
data.fram(x,y)
}
set.seed(42)
sim_data_1 = sim_1()
sim_1 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = 1)
data.frame(x,y)
}
sim_2 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = x)
data.frame(x,y)
}
sim_3 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x ^ 2 + rnorm(n = sample_size, mean = 0, sd = 5)
data.frame(x,y)
}
set.seed(42)
sim_data_1 = sim_1()
sim_1 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = 1)
data.frame(x,y)
}
sim_2 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x + rnorm(n = sample_size, mean = 0, sd = x)
data.frame(x,y)
}
sim_3 = function(sample_size = 500){
x = runif(n = sample_size) * 5
y = 3 + 5 * x ^ 2 + rnorm(n = sample_size, mean = 0, sd = 5)
data.frame(x,y)
}
set.seed(42)
sim_data_1 = sim_1()
fit_1 = lm(y ~ x, data = sim_data_1)
plot (y ~ x, data = sim_data_1, col = "grey", pch = 20,
main = "Data from Model 1")
abline(fit_1, col = "darkorange", lwd = 3)
sim_data_1 = sim_1()
fit_1 = lm(y ~ x, data = sim_data_1)
plot (y ~ x, data = sim_data_1, col = "grey", pch = 20,
main = "Data from Model 1")
abline(fit_1, col = "darkorange", lwd = 3)
plot(fitted(fit_1), resid(fit_1), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Data from Model 1")
abline(h = 0, col = "darkorange", lwd = 2)
set.seed(42)
sim_data_2 = sim_2()
fit_2 = lm(y ~ x, data = sim_data_2)
plot (y ~ x, data = sim_data_2, col = "grey", pch = 20,
main = "Data from Model 2")
abline(fit_2, col = "darkorange", lwd = 3)
plot(fitted(fit_2), resid(fit_2), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Data from Model 2")
abline(h = 0, col = "darkorange", lwd = 2)
3
3
3
set.seed(42)
sim_data_3 = sim_3()
fit_3 = lm(y ~ x, data = sim_data_3)
plot (y ~ x, data = sim_data_3, col = "grey", pch = 20,
main = "Data from Model 3")
abline(fit_3, col = "darkorange", lwd = 3)
plot(fitted(fit_3), resid(fit_3), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Data from Model 3")
abline(h = 0, col = "darkorange", lwd = 2)
set.seed(42)
sim_data_2 = sim_2()
fit_2 = lm(y ~ x, data = sim_data_2)
plot (y ~ x, data = sim_data_2, col = "grey", pch = 20,
main = "Data from Model 2")
abline(fit_2, col = "darkorange", lwd = 3)
plot (y ~ x, data = sim_data_2, col = "grey", pch = 20,
main = "Data from Model 2 - non-constant variance issue")
abline(fit_2, col = "darkorange", lwd = 3)
plot(fitted(fit_2), resid(fit_2), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Data from Model 2")
abline(h = 0, col = "darkorange", lwd = 2)
set.seed(42)
sim_data_3 = sim_3()
fit_3 = lm(y ~ x, data = sim_data_3)
plot (y ~ x, data = sim_data_3, col = "grey", pch = 20,
main = "Data from Model 3")
abline(fit_3, col = "darkorange", lwd = 3)
plot(fitted(fit_3), resid(fit_3), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Data from Model 3")
library(lmtest)
install.packages(lmtest)
install.packages(lmtest)
install.packages(lmtest)
install.packages(car)
install.packages(car)
